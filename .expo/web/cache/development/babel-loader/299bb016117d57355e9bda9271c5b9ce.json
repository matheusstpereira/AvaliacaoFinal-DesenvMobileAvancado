{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport invariant from 'invariant';\nimport { CameraType, ImageType } from \"./Camera.types\";\nimport * as CapabilityUtils from \"./WebCapabilityUtils\";\nimport { CameraTypeToFacingMode, ImageTypeFormat, MinimumConstraints } from \"./WebConstants\";\nimport { requestUserMediaAsync } from \"./WebUserMediaManager\";\nexport function getImageSize(videoWidth, videoHeight, scale) {\n  var width = videoWidth * scale;\n  var ratio = videoWidth / width;\n  var height = videoHeight / ratio;\n  return {\n    width: width,\n    height: height\n  };\n}\nexport function toDataURL(canvas, imageType, quality) {\n  invariant(Object.values(ImageType).includes(imageType), \"expo-camera: \" + imageType + \" is not a valid ImageType. Expected a string from: \" + Object.values(ImageType).join(', '));\n  var format = ImageTypeFormat[imageType];\n  if (imageType === ImageType.jpg) {\n    invariant(quality <= 1 && quality >= 0, \"expo-camera: \" + quality + \" is not a valid image quality. Expected a number from 0...1\");\n    return canvas.toDataURL(format, quality);\n  } else {\n    return canvas.toDataURL(format);\n  }\n}\nexport function hasValidConstraints(preferredCameraType, width, height) {\n  return preferredCameraType !== undefined && width !== undefined && height !== undefined;\n}\nfunction ensureCameraPictureOptions(config) {\n  var captureOptions = {\n    scale: 1,\n    imageType: ImageType.png,\n    isImageMirror: false\n  };\n  for (var key in config) {\n    if (key in config && config[key] !== undefined && key in captureOptions) {\n      captureOptions[key] = config[key];\n    }\n  }\n  return captureOptions;\n}\nvar DEFAULT_QUALITY = 0.92;\nexport function captureImageData(video) {\n  var pictureOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!video || video.readyState !== video.HAVE_ENOUGH_DATA) {\n    return null;\n  }\n  var canvas = captureImageContext(video, pictureOptions);\n  var context = canvas.getContext('2d', {\n    alpha: false\n  });\n  if (!context || !canvas.width || !canvas.height) {\n    return null;\n  }\n  var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n  return imageData;\n}\nexport function captureImageContext(video, _ref) {\n  var _ref$scale = _ref.scale,\n    scale = _ref$scale === void 0 ? 1 : _ref$scale,\n    _ref$isImageMirror = _ref.isImageMirror,\n    isImageMirror = _ref$isImageMirror === void 0 ? false : _ref$isImageMirror;\n  var videoWidth = video.videoWidth,\n    videoHeight = video.videoHeight;\n  var _getImageSize = getImageSize(videoWidth, videoHeight, scale),\n    width = _getImageSize.width,\n    height = _getImageSize.height;\n  var canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  var context = canvas.getContext('2d', {\n    alpha: false\n  });\n  if (!context) {\n    throw new Error('Context is not defined');\n  }\n  if (isImageMirror) {\n    context.setTransform(-1, 0, 0, 1, canvas.width, 0);\n  }\n  context.drawImage(video, 0, 0, width, height);\n  return canvas;\n}\nexport function captureImage(video, pictureOptions) {\n  var config = ensureCameraPictureOptions(pictureOptions);\n  var canvas = captureImageContext(video, config);\n  var imageType = config.imageType,\n    _config$quality = config.quality,\n    quality = _config$quality === void 0 ? DEFAULT_QUALITY : _config$quality;\n  return toDataURL(canvas, imageType, quality);\n}\nfunction getSupportedConstraints() {\n  if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\n    return navigator.mediaDevices.getSupportedConstraints();\n  }\n  return null;\n}\nexport function getIdealConstraints(preferredCameraType, width, height) {\n  var preferredConstraints = {\n    audio: false,\n    video: {}\n  };\n  if (hasValidConstraints(preferredCameraType, width, height)) {\n    return MinimumConstraints;\n  }\n  var supports = getSupportedConstraints();\n  if (!supports || !supports.facingMode || !supports.width || !supports.height) {\n    return MinimumConstraints;\n  }\n  if (preferredCameraType && Object.values(CameraType).includes(preferredCameraType)) {\n    var facingMode = CameraTypeToFacingMode[preferredCameraType];\n    if (isWebKit()) {\n      var key = facingMode === 'user' ? 'exact' : 'ideal';\n      preferredConstraints.video.facingMode = _defineProperty({}, key, facingMode);\n    } else {\n      preferredConstraints.video.facingMode = {\n        ideal: CameraTypeToFacingMode[preferredCameraType]\n      };\n    }\n  }\n  if (isMediaTrackConstraints(preferredConstraints.video)) {\n    preferredConstraints.video.width = width;\n    preferredConstraints.video.height = height;\n  }\n  return preferredConstraints;\n}\nfunction isMediaTrackConstraints(input) {\n  return input && typeof input.video !== 'boolean';\n}\nexport function getPreferredStreamDevice(preferredCameraType, preferredWidth, preferredHeight) {\n  var nextCameraType;\n  return _regeneratorRuntime.async(function getPreferredStreamDevice$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getStreamDevice(preferredCameraType, preferredWidth, preferredHeight));\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          if (!(_context.t0 instanceof OverconstrainedError && _context.t0.constraint === 'facingMode')) {\n            _context.next = 13;\n            break;\n          }\n          nextCameraType = preferredCameraType === CameraType.back ? CameraType.front : CameraType.back;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(getStreamDevice(nextCameraType, preferredWidth, preferredHeight));\n        case 12:\n          return _context.abrupt(\"return\", _context.sent);\n        case 13:\n          throw _context.t0;\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n}\nexport function getStreamDevice(preferredCameraType, preferredWidth, preferredHeight) {\n  var constraints, stream;\n  return _regeneratorRuntime.async(function getStreamDevice$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          constraints = getIdealConstraints(preferredCameraType, preferredWidth, preferredHeight);\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(requestUserMediaAsync(constraints));\n        case 3:\n          stream = _context2.sent;\n          return _context2.abrupt(\"return\", stream);\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function isWebKit() {\n  return /WebKit/.test(navigator.userAgent) && !/Edg/.test(navigator.userAgent);\n}\nexport function compareStreams(a, b) {\n  if (!a || !b) {\n    return false;\n  }\n  var settingsA = a.getTracks()[0].getSettings();\n  var settingsB = b.getTracks()[0].getSettings();\n  return settingsA.deviceId === settingsB.deviceId;\n}\nexport function capture(video, settings, config) {\n  var base64 = captureImage(video, config);\n  var capturedPicture = {\n    uri: base64,\n    base64: base64,\n    width: 0,\n    height: 0\n  };\n  if (settings) {\n    var _settings$width = settings.width,\n      width = _settings$width === void 0 ? 0 : _settings$width,\n      _settings$height = settings.height,\n      height = _settings$height === void 0 ? 0 : _settings$height;\n    capturedPicture.width = width;\n    capturedPicture.height = height;\n    capturedPicture.exif = settings;\n  }\n  if (config.onPictureSaved) {\n    config.onPictureSaved(capturedPicture);\n  }\n  return capturedPicture;\n}\nexport function syncTrackCapabilities(cameraType, stream) {\n  var settings,\n    _args3 = arguments;\n  return _regeneratorRuntime.async(function syncTrackCapabilities$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          settings = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n          if (!(stream != null && stream.getVideoTracks)) {\n            _context3.next = 4;\n            break;\n          }\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(Promise.all(stream.getVideoTracks().map(function (track) {\n            return onCapabilitiesReady(cameraType, track, settings);\n          })));\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nfunction onCapabilitiesReady(cameraType, track) {\n  var settings,\n    capabilities,\n    constraints,\n    clampedValues,\n    _i,\n    _clampedValues,\n    property,\n    validatedInternalConstrainedValue,\n    _args4 = arguments;\n  return _regeneratorRuntime.async(function onCapabilitiesReady$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          validatedInternalConstrainedValue = function _validatedInternalCon(constraintKey, settingsKey, converter) {\n            var convertedSetting = converter(settings[settingsKey]);\n            return validatedConstrainedValue({\n              constraintKey: constraintKey,\n              settingsKey: settingsKey,\n              convertedSetting: convertedSetting,\n              capabilities: capabilities,\n              settings: settings,\n              cameraType: cameraType\n            });\n          };\n          settings = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : {};\n          capabilities = track.getCapabilities();\n          constraints = {};\n          clampedValues = ['exposureCompensation', 'colorTemperature', 'iso', 'brightness', 'contrast', 'saturation', 'sharpness', 'focusDistance', 'zoom'];\n          for (_i = 0, _clampedValues = clampedValues; _i < _clampedValues.length; _i++) {\n            property = _clampedValues[_i];\n            if (capabilities[property]) {\n              constraints[property] = convertNormalizedSetting(capabilities[property], settings[property]);\n            }\n          }\n          if (capabilities.focusMode && settings.autoFocus !== undefined) {\n            constraints.focusMode = validatedInternalConstrainedValue('focusMode', 'autoFocus', CapabilityUtils.convertAutoFocusJSONToNative);\n          }\n          if (capabilities.torch && settings.flashMode !== undefined) {\n            constraints.torch = validatedInternalConstrainedValue('torch', 'flashMode', CapabilityUtils.convertFlashModeJSONToNative);\n          }\n          if (capabilities.whiteBalanceMode && settings.whiteBalance !== undefined) {\n            constraints.whiteBalanceMode = validatedInternalConstrainedValue('whiteBalanceMode', 'whiteBalance', CapabilityUtils.convertWhiteBalanceJSONToNative);\n          }\n          _context4.prev = 9;\n          _context4.next = 12;\n          return _regeneratorRuntime.awrap(track.applyConstraints({\n            advanced: [constraints]\n          }));\n        case 12:\n          _context4.next = 17;\n          break;\n        case 14:\n          _context4.prev = 14;\n          _context4.t0 = _context4[\"catch\"](9);\n          if (__DEV__) console.warn('Failed to apply constraints', _context4.t0);\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[9, 14]], Promise);\n}\nexport function stopMediaStream(stream) {\n  if (!stream) {\n    return;\n  }\n  if (stream.getAudioTracks) {\n    stream.getAudioTracks().forEach(function (track) {\n      return track.stop();\n    });\n  }\n  if (stream.getVideoTracks) {\n    stream.getVideoTracks().forEach(function (track) {\n      return track.stop();\n    });\n  }\n  if (isMediaStreamTrack(stream)) {\n    stream.stop();\n  }\n}\nexport function setVideoSource(video, stream) {\n  var _window$URL$createObj;\n  var createObjectURL = (_window$URL$createObj = window.URL.createObjectURL) != null ? _window$URL$createObj : window.webkitURL.createObjectURL;\n  if (typeof video.srcObject !== 'undefined') {\n    video.srcObject = stream;\n  } else if (typeof video.mozSrcObject !== 'undefined') {\n    video.mozSrcObject = stream;\n  } else if (stream && createObjectURL) {\n    video.src = createObjectURL(stream);\n  }\n  if (!stream) {\n    var _window$URL$revokeObj, _ref2, _video$src;\n    var revokeObjectURL = (_window$URL$revokeObj = window.URL.revokeObjectURL) != null ? _window$URL$revokeObj : window.webkitURL.revokeObjectURL;\n    var source = (_ref2 = (_video$src = video.src) != null ? _video$src : video.srcObject) != null ? _ref2 : video.mozSrcObject;\n    if (revokeObjectURL && typeof source === 'string') {\n      revokeObjectURL(source);\n    }\n  }\n}\nexport function isCapabilityAvailable(video, keyName) {\n  var stream = video.srcObject;\n  if (stream instanceof MediaStream) {\n    var _videoTrack$getCapabi;\n    var videoTrack = stream.getVideoTracks()[0];\n    return videoTrack.getCapabilities == null ? void 0 : (_videoTrack$getCapabi = videoTrack.getCapabilities()) == null ? void 0 : _videoTrack$getCapabi[keyName];\n  }\n  return false;\n}\nfunction isMediaStreamTrack(input) {\n  return typeof input.stop === 'function';\n}\nfunction convertNormalizedSetting(range, value) {\n  if (!value) {\n    return;\n  }\n  var converted = convertRange(value, [range.min, range.max]);\n  return Math.min(range.max, Math.max(range.min, converted));\n}\nfunction convertRange(value, r2) {\n  var r1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 1];\n  return (value - r1[0]) * (r2[1] - r2[0]) / (r1[1] - r1[0]) + r2[0];\n}\nfunction validatedConstrainedValue(props) {\n  var constraintKey = props.constraintKey,\n    settingsKey = props.settingsKey,\n    convertedSetting = props.convertedSetting,\n    capabilities = props.capabilities,\n    settings = props.settings,\n    cameraType = props.cameraType;\n  var setting = settings[settingsKey];\n  if (Array.isArray(capabilities[constraintKey]) && convertedSetting && !capabilities[constraintKey].includes(convertedSetting)) {\n    if (__DEV__) {\n      console.warn(\" { \" + settingsKey + \": \\\"\" + setting + \"\\\" } (converted to \\\"\" + convertedSetting + \"\\\" in the browser) is not supported for camera type \\\"\" + cameraType + \"\\\" in your browser. Using the default value instead.\");\n    }\n    return undefined;\n  }\n  return convertedSetting;\n}","map":{"version":3,"mappings":"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","names":["invariant","CameraType","ImageType","CapabilityUtils","CameraTypeToFacingMode","ImageTypeFormat","MinimumConstraints","requestUserMediaAsync","getImageSize","videoWidth","videoHeight","scale","width","ratio","height","toDataURL","canvas","imageType","quality","Object","values","includes","join","format","jpg","hasValidConstraints","preferredCameraType","undefined","ensureCameraPictureOptions","config","captureOptions","png","isImageMirror","key","DEFAULT_QUALITY","captureImageData","video","pictureOptions","readyState","HAVE_ENOUGH_DATA","captureImageContext","context","getContext","alpha","imageData","getImageData","document","createElement","Error","setTransform","drawImage","captureImage","getSupportedConstraints","navigator","mediaDevices","getIdealConstraints","preferredConstraints","audio","supports","facingMode","isWebKit","ideal","isMediaTrackConstraints","input","getPreferredStreamDevice","preferredWidth","preferredHeight","getStreamDevice","OverconstrainedError","constraint","nextCameraType","back","front","constraints","stream","test","userAgent","compareStreams","a","b","settingsA","getTracks","getSettings","settingsB","deviceId","capture","settings","base64","capturedPicture","uri","exif","onPictureSaved","syncTrackCapabilities","cameraType","getVideoTracks","Promise","all","map","track","onCapabilitiesReady","validatedInternalConstrainedValue","constraintKey","settingsKey","converter","convertedSetting","validatedConstrainedValue","capabilities","getCapabilities","clampedValues","property","convertNormalizedSetting","focusMode","autoFocus","convertAutoFocusJSONToNative","torch","flashMode","convertFlashModeJSONToNative","whiteBalanceMode","whiteBalance","convertWhiteBalanceJSONToNative","applyConstraints","advanced","__DEV__","console","warn","stopMediaStream","getAudioTracks","forEach","stop","isMediaStreamTrack","setVideoSource","createObjectURL","window","URL","webkitURL","srcObject","mozSrcObject","src","revokeObjectURL","source","isCapabilityAvailable","keyName","MediaStream","videoTrack","range","value","converted","convertRange","min","max","Math","r2","r1","props","setting","Array","isArray"],"sourceRoot":"","sources":["../src/WebCameraUtils.ts"],"sourcesContent":["/* eslint-env browser */\nimport invariant from 'invariant';\n\nimport {\n  CameraType,\n  CameraCapturedPicture,\n  ImageSize,\n  ImageType,\n  WebCameraSettings,\n  CameraPictureOptions,\n} from './Camera.types';\nimport * as CapabilityUtils from './WebCapabilityUtils';\nimport { CameraTypeToFacingMode, ImageTypeFormat, MinimumConstraints } from './WebConstants';\nimport { requestUserMediaAsync } from './WebUserMediaManager';\n\ninterface ConstrainLongRange {\n  max?: number;\n  min?: number;\n  exact?: number;\n  ideal?: number;\n}\n\nexport function getImageSize(videoWidth: number, videoHeight: number, scale: number): ImageSize {\n  const width = videoWidth * scale;\n  const ratio = videoWidth / width;\n  const height = videoHeight / ratio;\n\n  return {\n    width,\n    height,\n  };\n}\n\nexport function toDataURL(\n  canvas: HTMLCanvasElement,\n  imageType: ImageType,\n  quality: number\n): string {\n  invariant(\n    Object.values(ImageType).includes(imageType),\n    `expo-camera: ${imageType} is not a valid ImageType. Expected a string from: ${Object.values(\n      ImageType\n    ).join(', ')}`\n  );\n\n  const format = ImageTypeFormat[imageType];\n  if (imageType === ImageType.jpg) {\n    invariant(\n      quality <= 1 && quality >= 0,\n      `expo-camera: ${quality} is not a valid image quality. Expected a number from 0...1`\n    );\n    return canvas.toDataURL(format, quality);\n  } else {\n    return canvas.toDataURL(format);\n  }\n}\n\nexport function hasValidConstraints(\n  preferredCameraType?: CameraType,\n  width?: number | ConstrainLongRange,\n  height?: number | ConstrainLongRange\n): boolean {\n  return preferredCameraType !== undefined && width !== undefined && height !== undefined;\n}\n\nfunction ensureCameraPictureOptions(config: CameraPictureOptions): CameraPictureOptions {\n  const captureOptions = {\n    scale: 1,\n    imageType: ImageType.png,\n    isImageMirror: false,\n  };\n\n  for (const key in config) {\n    if (key in config && config[key] !== undefined && key in captureOptions) {\n      captureOptions[key] = config[key];\n    }\n  }\n  return captureOptions;\n}\n\nconst DEFAULT_QUALITY = 0.92;\n\nexport function captureImageData(\n  video: HTMLVideoElement | null,\n  pictureOptions: Pick<CameraPictureOptions, 'scale' | 'isImageMirror'> = {}\n): ImageData | null {\n  if (!video || video.readyState !== video.HAVE_ENOUGH_DATA) {\n    return null;\n  }\n  const canvas = captureImageContext(video, pictureOptions);\n\n  const context = canvas.getContext('2d', { alpha: false });\n  if (!context || !canvas.width || !canvas.height) {\n    return null;\n  }\n\n  const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n  return imageData;\n}\n\nexport function captureImageContext(\n  video: HTMLVideoElement,\n  { scale = 1, isImageMirror = false }: Pick<CameraPictureOptions, 'scale' | 'isImageMirror'>\n): HTMLCanvasElement {\n  const { videoWidth, videoHeight } = video;\n  const { width, height } = getImageSize(videoWidth, videoHeight, scale!);\n\n  // Build the canvas size and draw the camera image to the context from video\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const context = canvas.getContext('2d', { alpha: false });\n\n  if (!context) {\n    // Should never be called\n    throw new Error('Context is not defined');\n  }\n  // sharp image details\n  // context.imageSmoothingEnabled = false;\n\n  // Flip horizontally (as css transform: rotateY(180deg))\n  if (isImageMirror) {\n    context.setTransform(-1, 0, 0, 1, canvas.width, 0);\n  }\n\n  context.drawImage(video, 0, 0, width, height);\n\n  return canvas;\n}\n\nexport function captureImage(\n  video: HTMLVideoElement,\n  pictureOptions: CameraPictureOptions\n): string {\n  const config = ensureCameraPictureOptions(pictureOptions);\n  const canvas = captureImageContext(video, config);\n  const { imageType, quality = DEFAULT_QUALITY } = config;\n  return toDataURL(canvas, imageType!, quality);\n}\n\nfunction getSupportedConstraints(): MediaTrackSupportedConstraints | null {\n  if (navigator.mediaDevices && navigator.mediaDevices.getSupportedConstraints) {\n    return navigator.mediaDevices.getSupportedConstraints();\n  }\n  return null;\n}\n\nexport function getIdealConstraints(\n  preferredCameraType: CameraType,\n  width?: number | ConstrainLongRange,\n  height?: number | ConstrainLongRange\n): MediaStreamConstraints {\n  const preferredConstraints: MediaStreamConstraints = {\n    audio: false,\n    video: {},\n  };\n\n  if (hasValidConstraints(preferredCameraType, width, height)) {\n    return MinimumConstraints;\n  }\n\n  const supports = getSupportedConstraints();\n  // TODO(Bacon): Test this\n  if (!supports || !supports.facingMode || !supports.width || !supports.height) {\n    return MinimumConstraints;\n  }\n\n  if (preferredCameraType && Object.values(CameraType).includes(preferredCameraType)) {\n    const facingMode = CameraTypeToFacingMode[preferredCameraType];\n    if (isWebKit()) {\n      const key = facingMode === 'user' ? 'exact' : 'ideal';\n      (preferredConstraints.video as MediaTrackConstraints).facingMode = {\n        [key]: facingMode,\n      };\n    } else {\n      (preferredConstraints.video as MediaTrackConstraints).facingMode = {\n        ideal: CameraTypeToFacingMode[preferredCameraType],\n      };\n    }\n  }\n\n  if (isMediaTrackConstraints(preferredConstraints.video)) {\n    preferredConstraints.video.width = width;\n    preferredConstraints.video.height = height;\n  }\n\n  return preferredConstraints;\n}\n\nfunction isMediaTrackConstraints(input: any): input is MediaTrackConstraints {\n  return input && typeof input.video !== 'boolean';\n}\n\n/**\n * Invoke getStreamDevice a second time with the opposing camera type if the preferred type cannot be retrieved.\n *\n * @param preferredCameraType\n * @param preferredWidth\n * @param preferredHeight\n */\nexport async function getPreferredStreamDevice(\n  preferredCameraType: CameraType,\n  preferredWidth?: number | ConstrainLongRange,\n  preferredHeight?: number | ConstrainLongRange\n): Promise<MediaStream> {\n  try {\n    return await getStreamDevice(preferredCameraType, preferredWidth, preferredHeight);\n  } catch (error) {\n    // A hack on desktop browsers to ensure any camera is used.\n    // eslint-disable-next-line no-undef\n    if (error instanceof OverconstrainedError && error.constraint === 'facingMode') {\n      const nextCameraType =\n        preferredCameraType === CameraType.back ? CameraType.front : CameraType.back;\n      return await getStreamDevice(nextCameraType, preferredWidth, preferredHeight);\n    }\n    throw error;\n  }\n}\n\nexport async function getStreamDevice(\n  preferredCameraType: CameraType,\n  preferredWidth?: number | ConstrainLongRange,\n  preferredHeight?: number | ConstrainLongRange\n): Promise<MediaStream> {\n  const constraints: MediaStreamConstraints = getIdealConstraints(\n    preferredCameraType,\n    preferredWidth,\n    preferredHeight\n  );\n  const stream: MediaStream = await requestUserMediaAsync(constraints);\n  return stream;\n}\n\nexport function isWebKit(): boolean {\n  return /WebKit/.test(navigator.userAgent) && !/Edg/.test(navigator.userAgent);\n}\n\nexport function compareStreams(a: MediaStream | null, b: MediaStream | null): boolean {\n  if (!a || !b) {\n    return false;\n  }\n  const settingsA = a.getTracks()[0].getSettings();\n  const settingsB = b.getTracks()[0].getSettings();\n  return settingsA.deviceId === settingsB.deviceId;\n}\n\nexport function capture(\n  video: HTMLVideoElement,\n  settings: MediaTrackSettings,\n  config: CameraPictureOptions\n): CameraCapturedPicture {\n  const base64 = captureImage(video, config);\n\n  const capturedPicture: CameraCapturedPicture = {\n    uri: base64,\n    base64,\n    width: 0,\n    height: 0,\n  };\n\n  if (settings) {\n    const { width = 0, height = 0 } = settings;\n    capturedPicture.width = width;\n    capturedPicture.height = height;\n    capturedPicture.exif = settings;\n  }\n\n  if (config.onPictureSaved) {\n    config.onPictureSaved(capturedPicture);\n  }\n  return capturedPicture;\n}\n\nexport async function syncTrackCapabilities(\n  cameraType: CameraType,\n  stream: MediaStream | null,\n  settings: WebCameraSettings = {}\n): Promise<void> {\n  if (stream?.getVideoTracks) {\n    await Promise.all(\n      stream.getVideoTracks().map((track) => onCapabilitiesReady(cameraType, track, settings))\n    );\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints\nasync function onCapabilitiesReady(\n  cameraType: CameraType,\n  track: MediaStreamTrack,\n  settings: WebCameraSettings = {}\n): Promise<void> {\n  const capabilities = track.getCapabilities();\n\n  // Create an empty object because if you set a constraint that isn't available an error will be thrown.\n  const constraints: MediaTrackConstraintSet = {};\n\n  // TODO(Bacon): Add `pointsOfInterest` support\n  const clampedValues = [\n    'exposureCompensation',\n    'colorTemperature',\n    'iso',\n    'brightness',\n    'contrast',\n    'saturation',\n    'sharpness',\n    'focusDistance',\n    'zoom',\n  ];\n\n  for (const property of clampedValues) {\n    if (capabilities[property]) {\n      constraints[property] = convertNormalizedSetting(capabilities[property], settings[property]);\n    }\n  }\n\n  function validatedInternalConstrainedValue<IConvertedType>(\n    constraintKey: string,\n    settingsKey: string,\n    converter: (settingValue: any) => IConvertedType\n  ) {\n    const convertedSetting = converter(settings[settingsKey]);\n    return validatedConstrainedValue({\n      constraintKey,\n      settingsKey,\n      convertedSetting,\n      capabilities,\n      settings,\n      cameraType,\n    });\n  }\n\n  if (capabilities.focusMode && settings.autoFocus !== undefined) {\n    constraints.focusMode = validatedInternalConstrainedValue<MediaTrackConstraintSet['focusMode']>(\n      'focusMode',\n      'autoFocus',\n      CapabilityUtils.convertAutoFocusJSONToNative\n    );\n  }\n\n  if (capabilities.torch && settings.flashMode !== undefined) {\n    constraints.torch = validatedInternalConstrainedValue<MediaTrackConstraintSet['torch']>(\n      'torch',\n      'flashMode',\n      CapabilityUtils.convertFlashModeJSONToNative\n    );\n  }\n\n  if (capabilities.whiteBalanceMode && settings.whiteBalance !== undefined) {\n    constraints.whiteBalanceMode = validatedInternalConstrainedValue<\n      MediaTrackConstraintSet['whiteBalanceMode']\n    >('whiteBalanceMode', 'whiteBalance', CapabilityUtils.convertWhiteBalanceJSONToNative);\n  }\n\n  try {\n    await track.applyConstraints({ advanced: [constraints] });\n  } catch (error) {\n    if (__DEV__) console.warn('Failed to apply constraints', error);\n  }\n}\n\nexport function stopMediaStream(stream: MediaStream | null) {\n  if (!stream) {\n    return;\n  }\n  if (stream.getAudioTracks) {\n    stream.getAudioTracks().forEach((track) => track.stop());\n  }\n  if (stream.getVideoTracks) {\n    stream.getVideoTracks().forEach((track) => track.stop());\n  }\n  if (isMediaStreamTrack(stream)) {\n    stream.stop();\n  }\n}\n\nexport function setVideoSource(\n  video: HTMLVideoElement,\n  stream: MediaStream | MediaSource | Blob | null\n): void {\n  const createObjectURL = window.URL.createObjectURL ?? window.webkitURL.createObjectURL;\n\n  if (typeof video.srcObject !== 'undefined') {\n    video.srcObject = stream;\n  } else if (typeof (video as any).mozSrcObject !== 'undefined') {\n    (video as any).mozSrcObject = stream;\n  } else if (stream && createObjectURL) {\n    video.src = createObjectURL(stream as MediaSource | Blob);\n  }\n\n  if (!stream) {\n    const revokeObjectURL = window.URL.revokeObjectURL ?? window.webkitURL.revokeObjectURL;\n    const source = video.src ?? video.srcObject ?? (video as any).mozSrcObject;\n    if (revokeObjectURL && typeof source === 'string') {\n      revokeObjectURL(source);\n    }\n  }\n}\n\nexport function isCapabilityAvailable(video: HTMLVideoElement, keyName: string): boolean {\n  const stream = video.srcObject;\n\n  if (stream instanceof MediaStream) {\n    const videoTrack = stream.getVideoTracks()[0];\n    return videoTrack.getCapabilities?.()?.[keyName];\n  }\n\n  return false;\n}\n\nfunction isMediaStreamTrack(input: any): input is MediaStreamTrack {\n  return typeof input.stop === 'function';\n}\n\nfunction convertNormalizedSetting(range: MediaSettingsRange, value?: number): number | undefined {\n  if (!value) {\n    return;\n  }\n  // convert the normalized incoming setting to the native camera zoom range\n  const converted = convertRange(value, [range.min, range.max]);\n  // clamp value so we don't get an error\n  return Math.min(range.max, Math.max(range.min, converted));\n}\n\nfunction convertRange(value: number, r2: number[], r1: number[] = [0, 1]): number {\n  return ((value - r1[0]) * (r2[1] - r2[0])) / (r1[1] - r1[0]) + r2[0];\n}\n\nfunction validatedConstrainedValue<T>(props: {\n  constraintKey: string;\n  settingsKey: string;\n  convertedSetting: T;\n  capabilities: MediaTrackCapabilities;\n  settings: WebCameraSettings;\n  cameraType: string;\n}): T | undefined {\n  const { constraintKey, settingsKey, convertedSetting, capabilities, settings, cameraType } =\n    props;\n  const setting = settings[settingsKey];\n  if (\n    Array.isArray(capabilities[constraintKey]) &&\n    convertedSetting &&\n    !capabilities[constraintKey].includes(convertedSetting)\n  ) {\n    if (__DEV__) {\n      // Only warn in dev mode.\n      console.warn(\n        ` { ${settingsKey}: \"${setting}\" } (converted to \"${convertedSetting}\" in the browser) is not supported for camera type \"${cameraType}\" in your browser. Using the default value instead.`\n      );\n    }\n    return undefined;\n  }\n  return convertedSetting;\n}\n"]},"metadata":{},"sourceType":"module"}